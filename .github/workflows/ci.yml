name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  IMAGE_NAME: gcr.io/plucky-haven-463121-j1/intrusion-api
  TAG: latest

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies
        run: pipenv install --deploy --system

  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install pipenv and pre-commit
        run: |
          pip install pipenv pre-commit
          pipenv install --deploy --system

      - name: Run linting checks
        run: pre-commit run --all-files

  test:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install pipenv and dependencies
        run: |
          pip install pipenv
          pipenv install --deploy --system

      - name: Run tests (skip model if needed)
        run: SKIP_MODEL_TESTS=1 pytest tests/ --maxfail=1 --disable-warnings -q

  build-and-push:
    needs: [lint, test]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v3

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: '414.0.0'
          project_id: plucky-haven-463121-j1

      - name: Write GCP credentials to file
        run: echo "${{ secrets.GCP_SA_KEY }}" > $HOME/gcp-key.json

      - name: Activate service account
        run: gcloud auth activate-service-account --key-file="$HOME/gcp-key.json"

      - name: Authenticate Docker to GCR
        run: gcloud auth configure-docker

      - name: Build and push Docker image to GCR
        run: make gcloud-build

      - name: Clean up key
        run: rm $HOME/gcp-key.json
